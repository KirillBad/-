@startuml
interface IObserver {
    + Update()
}

abstract class Observable {
    # _observers: List<IObserver>
    + AddObserver(observer: IObserver)
    # NotifyUpdate()
}

class OrganizationModel {
    - _name: string
    - _address: string
    - _employeeCount: int
    - _revenue: decimal
    - _premiumCount: int
    + Name: string
    + Address: string
    + EmployeeCount: int
    + Revenue: decimal
    + PremiumCount: int
    + CalculateInsurancePremium(): decimal
    + ProcessClaim(amount: decimal)
}

class OrganizationController {
    - _model: OrganizationModel
    + SetName(name: string)
    + SetAddress(address: string)
    + SetEmployeeCount(count: int)
    + CalculateInsurancePremium(): decimal
    + ProcessClaim(amount: decimal)
}

class Form1 {
    - _controller: OrganizationController
    - _model: OrganizationModel
    - _lastPremium: decimal
    + Update()
    - UpdateRevenueLabel()
    - btnSave_Click()
    - btnCalculate_Click()
    - btnProcess_Click()
}

Observable <|-- OrganizationModel
IObserver <|.. Form1
Form1 --> OrganizationController
OrganizationController --> OrganizationModel
@enduml